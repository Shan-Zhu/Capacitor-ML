import numpy as np
import pandas as pd
import sklearn as sk
from sklearn.metrics import r2_score
from sklearn.metrics import make_scorer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from IPython.display import display

# input data

data=pd.read_csv('CDC/Capacitor 1-1000-final-guiyi.csv',sep=';')
capacitance=data['capacitance'][:,np.newaxis]
features=data.drop('capacitance', axis=1)

# Split data in train set and test set
X_train,X_test,y_train,y_test=train_test_split(features, capacitance, test_size=0.1, random_state=0)

# print (X_train.shape)
# print (X_test.shape)
# print (X_test)

# alpha = 0.1
LinearR = LinearRegression()

y_pred_LinearR = LinearR.fit(X_train, y_train).predict(X_test)
r2_score_LinearR = r2_score(y_test, y_pred_LinearR)
print(LinearR)
print("r^2 on test data : %f" % r2_score_LinearR)


#检测模型
yuce1=pd.read_csv('CDC/yuce.csv',sep=';')

for i, capacitance in enumerate(LinearR.predict(yuce1)):
    print (i,capacitance)
    i=i+1
